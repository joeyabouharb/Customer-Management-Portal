// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Contexts;

namespace api.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    partial class CustomerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("api.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("TblCustomers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "joey.test@gmail.com",
                            FirstName = "Joey",
                            HomeAddress = "13 fake street belmore",
                            Surname = "Smith"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "james.test@gmail.com",
                            FirstName = "James",
                            HomeAddress = "14 fake street belmore",
                            Surname = "Doe"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "john.test@gmail.com",
                            FirstName = "John",
                            HomeAddress = "15 fake street belmore",
                            Surname = "Mcafee"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "peter.test@gmail.com",
                            FirstName = "Peter",
                            HomeAddress = "16 fake street belmore",
                            Surname = "harb"
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "frodo.test@gmail.com",
                            FirstName = "frodo",
                            HomeAddress = "17 fake street belmore",
                            Surname = "baggins"
                        },
                        new
                        {
                            CustomerId = 6,
                            Email = "bran.test@gmail.com",
                            FirstName = "bran",
                            HomeAddress = "18 fake street belmore",
                            Surname = "stark"
                        },
                        new
                        {
                            CustomerId = 7,
                            Email = "freddie.test@gmail.com",
                            FirstName = "freddie",
                            HomeAddress = "19 fake street belmore",
                            Surname = "murcury"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
